---
import { getProject } from "../../../lib/api.js";
import { getLangFromUrl } from "../../../lib/i18n.js";

const { slug } = Astro.params;
const lang = getLangFromUrl(Astro.url);
const project = await getProject(slug, lang);

// Depuraci√≥n: revisa la estructura de project en la consola del servidor
console.log("Project:", project);

const flexibleSectionsProjects = project?.acf?.flexible_project || [];

import BaseLayout from "../../../layouts/Layout.astro";
import BlockProject from "../../../components/blockProject.vue";
import ThenNow from "../../../components/ThenNow.vue";
import Timeline from "../../../components/Timeline.vue";
---

<BaseLayout>
  <div class="project" theme={project.acf.project_info.theme}>
    <div
      class="h-[50dvh] w-full overflow-hidden flex justify-center items-center mb-sm"
    >
      <img
        class="w-full object-cover object-center"
        src={project.acf.project_info.thumbnail}
      />
    </div>

    <div class="tags-line flex px-sm mt-md">
      <p
        class="text-mini items-end flex font-sans px-tag-x py-tag-y bg-primary text-foreground-fix rounded-dpack"
      >
        {project.acf.project_info.client}
      </p>
      <p
        class="text-mini items-end flex font-sans px-tag-x py-tag-y bg-zinc-100 text-primary border border-solid rounded-full"
      >
        {project.acf.project_info.brand}
      </p>
    </div>
    <div class="flex flex-col text-primary">
      <div class="flex flex-col md:flex-row m-sm gap-sm py-md mb-lg border-y-2 border-primary">
        <div class="project-header w-full md:w-1/2 pr-xl">
          <h1 class="text-display font-display">{project.title.rendered}</h1>
        </div>

        <div class="details w-full md:w-1/2 pr-xl">
          <p class="text-lead font-bold mb-sm">
            {project.acf.project_info.lead}
          </p>
          <p set:html={project.acf.project_info.paragraph} />
          <p class="font-medium mt-sm">Servicios</p>
          <ul>
            {
              project?._embedded?.["wp:term"]?.[1]?.map((tag: any) => (
                <li class="capitalize">{tag.slug}</li>
              ))
            }
          </ul>
        </div>
      </div>

      {
        flexibleSectionsProjects.map((section: any) => {
          if (section.acf_fc_layout === "block_project") {
            return (
              <BlockProject
                client:only
                projectId={project.id}
                text={section.text}
                images={section.images}
              />
            );
          } else if (section.acf_fc_layout === "thennow") {
            return (
              <ThenNow
                client:only
                projectId={project.id}
                imageThen={section.then}
                imageNow={section.now}
              />
            );
          } else if (section.acf_fc_layout === "timeline") {
            return (
              <Timeline
                client:only
                projectId={project.id}
                hitos={section.hitos}
              />
            );
          }
        })
      }
    </div>
  </div>
</BaseLayout>

---
import { getProject } from "../../../lib/api.js";
import { getLangFromUrl } from "../../../lib/i18n.js";

const { slug } = Astro.params;
const lang = getLangFromUrl(Astro.url);
const project = await getProject(slug, lang);



// DepuraciÃ³n: revisa la estructura de project en la consola del servidor
console.log("Project:", project);

const flexibleSectionsProjects = project?.acf?.flexible_project || [];

import BaseLayout from "../../../layouts/Layout.astro";
import BlockProject from "../../../components/blockProject.vue";
import ThenNow from "../../../components/ThenNow.vue";
import Timeline from "../../../components/Timeline.vue";
import ProjectThumbnail from '../../../components/ProjectThumbnail.vue';

const defaultCustomType = lang === 'es' ? 'proyectos' : 'projects';

let enrichedProjects = [];
if (project?.acf?.flexible_project) {
  const projectsSection = project.acf.flexible_project.find(
    (section: any) => section.acf_fc_layout === 'projects'
  );
  if (projectsSection && projectsSection.projects) {
    enrichedProjects = await Promise.all(
      projectsSection.projects.map(async (item:any) => {
        // Usamos el slug del proyecto del item para obtener datos adicionales
        const additionalData = await getProject(item.project.post_name, lang);
        return { ...item, additionalData };
      })
    );
  }
}
---

<BaseLayout>
  <div class="project " theme={project?.acf?.project_info?.theme}>
    <div
      class="h-[60dvh] md:h-[50dvh] w-full overflow-hidden flex justify-center items-center mb-lg md:mb-sm"
    >
      <img
        class="w-full h-full object-cover object-center"
        src={project?.acf?.project_info?.thumbnail}
      />
    </div>

    <div class="tags-line flex px-sm mt-md ">
      <p
        class="text-mini items-end flex font-sans px-tag-x py-tag-y bg-primary text-foreground rounded-dpack"
      >
        {project?.acf?.project_info?.client}
      </p>
       
      {project?.acf?.project_info?.brand && (
        <p class="text-mini items-end flex font-sans px-tag-x py-tag-y bg-zinc-100 text-primary border border-solid rounded-full">
          {project?.acf?.project_info?.brand}
        </p>
      )}
      
     
    </div>
    <div class="flex flex-col text-primary ">
      <div class="flex flex-col md:flex-row m-sm gap-sm py-md mb-lg border-y-2 border-primary">
        <div class="project-header w-full md:w-1/2 pr-xl">
          <h1 class="text-display font-display">{project?.title?.rendered}</h1>
        </div>

        <div class="details w-full md:w-1/2 pr-lg md:pr-xl md:max-w-[700px]">
          <div class="text-lead font-bold mb-sm">
            {project?.acf?.project_info?.lead}
          </div>
          <p class="description" set:html={project?.acf?.project_info?.paragraph} />
          <div class="font-medium mt-sm">Servicios</div>
          <ul>
            {
              project?._embedded?.["wp:term"]?.[1]?.map((tag: any) => (
                <li class="capitalize">{tag.slug}</li>
              ))
            }
          </ul>
        </div>
      </div>

      {
        flexibleSectionsProjects.map((section: any) => {
          if (section.acf_fc_layout === "block_project") {
            return (
              <BlockProject
                client:only
                section = {section}
                projectId={project.id}
                text={section.text}
                images={section.images}
              />
            );
          } else if (section.acf_fc_layout === "thennow") {
            return (
              <ThenNow
                client:only
                projectId={project.id}
                imageThen={section.then}
                imageNow={section.now}
              />
            );
          } else if (section.acf_fc_layout === "timeline") {
            return (
              <Timeline
                client:only
                projectId={project.id}
                hitos={section.hitos}
              />
            );
          } else if (section.acf_fc_layout === 'projects') {
          return (
          <h2 class="p-sm pt-header font-bold text-p text-black">{section.title}</h2>
          <ul class="px-sm grid grid-cols-1 md:grid-cols-2 gap-x-sm pb-lg">
              {section.projects.map((item: any, idx: number) => {
                // Buscamos el proyecto enriquecido correspondiente a este item
                const enriched = enrichedProjects.find(
                  (p: any) => p.project.ID === item.project.ID
                );
                return (
                <li class= {item.full ? 'cols-span-1 md:col-span-2' : 'col-span-1'}>
                    <a href={`/${lang}/${defaultCustomType}/${item.project.post_name}`}>
                     
                      <ProjectThumbnail
                        client:only
                        pageId={item.project.ID}
                        thumbnail={item.image}
                        full={item.full}
                        projectData={enriched ? enriched.additionalData : null}
                      />
                    </a>
                  </li>
                );
              })}
            </ul>

          );
        }
          return null;
        })
      }
    </div>
  </div>

</BaseLayout>


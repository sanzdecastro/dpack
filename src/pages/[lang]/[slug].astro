---


import { getPage, getProject } from '../../lib/api.js';
import { getLangFromUrl } from '../../lib/i18n.js';

const lang = getLangFromUrl(Astro.url);
const { customType, slug } = Astro.params;

const defaultCustomType = lang === 'es' ? 'proyectos' : 'projects';

const [page] = await Promise.all([
  getPage(slug, lang),
]);



import BaseLayout from '../../layouts/Layout.astro';
import Slider from '../../components/slider.vue';
import Data from '../../components/data.vue';
import Services from '../../components/services.vue';
import ProjectThumbnail from '../../components/ProjectThumbnail.vue';
import Intro from '../../components/intro.vue';
import IntroProyectos from '../../components/intro_proyectos.vue';
import Values from '../../components/values.vue';
import Method from '../../components/method.vue';


const flexibleSections = page?.acf?.flexible || [];

// Aquí, en lugar de llamar a getProject con el slug de la página,
// hacemos llamadas para cada proyecto de la sección:
let enrichedProjects = [];
if (page?.acf?.flexible) {
  const projectsSection = page.acf.flexible.find(
    (section: any) => section.acf_fc_layout === 'projects'
  );
  if (projectsSection && projectsSection.projects) {
    enrichedProjects = await Promise.all(
      projectsSection.projects.map(async (item:any) => {
        // Usamos el slug del proyecto del item para obtener datos adicionales
        const additionalData = await getProject(item.project.post_name, lang);
        return { ...item, additionalData };
      })
    );
  }
}
---


<BaseLayout >
 
  <div class="">
   
    <div class="flex flex-col">
      {flexibleSections.map((section: any) => {
        if (section.acf_fc_layout === 'slider') {
          return (
            <Slider
              pageId={page.id}
              section={section}
              client:only
            />
          );
        } else if (section.acf_fc_layout === 'data') {
          return (
            <Data
              pageId={page.id}
              section={section}
              client:only
            />
          );
        } else if (section.acf_fc_layout === 'services') {
          return (
            <Services
              pageId={page.id}
              section={section}
              client:only
            />
          );
        } else if (section.acf_fc_layout === 'intro' ) {
          return (
            <Intro
              pageTitle={page.title.rendered}
              pageId={page.id}
              section={section}
              client:only
            />
          );
        } else if (section.acf_fc_layout === 'intro_proyectos' ) {
          return (
            <IntroProyectos
              pageTitle={page.title.rendered}
              pageId={page.id}
              section={section}
              client:only
            />
          );
        }else if (section.acf_fc_layout === 'values') {
          return (
            <Values
              pageId={page.id}
              section={section}
              client:only
            />
          );
        } else if (section.acf_fc_layout === 'method') {
          return (
            <Method
              lang= {lang}
              pageId={page.id}
              section={section}
              client:only
            />
          );
        }else if (section.acf_fc_layout === 'projects') {
          return (
          <h2 class="p-sm pt-header font-bold text-p">{section.title}</h2>
          <ul class="px-sm grid grid-cols-2 gap-x-sm">
              {section.projects.map((item: any, idx: number) => {
                // Buscamos el proyecto enriquecido correspondiente a este item
                const enriched = enrichedProjects.find(
                  (p: any) => p.project.ID === item.project.ID
                );
                return (
                  <li class= {item.full ? 'col-span-2' : 'col-span-1'}>
                    <a href={`/${lang}/${defaultCustomType}/${item.project.post_name}`}>
                     
                      <ProjectThumbnail
                        client:only
                        pageId={item.project.ID}
                        thumbnail={item.image}
                        full={item.full}
                        projectData={enriched ? enriched.additionalData : null}
                      />
                    </a>
                  </li>
                );
              })}
            </ul>
            <div class="flex pt-lg justify-end p-sm">
              <a href={section.link.url} class="font-bold bg-primary text-foreground rounded flex items-center px-button-x py-button-y hover:bg-foreground hover:text-primary">{section.link.title}</a>
            </div>
          );
        }
        return null;
      })}
    </div>

   
  </div>

  
</BaseLayout>

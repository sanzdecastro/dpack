---
// import LenisScroll from '../components/LenisScroll.astro';
import "../styles/global.css";

import { ViewTransitions } from "astro:transitions";
import { fade } from "astro:transitions";
import { slide } from "astro:transitions";
import { getPages, getPage } from "../lib/api.js";

import { ClientRouter } from "astro:transitions";
import Header from "../components/Header.vue";
import Footer from "../components/Footer.vue";
import Loading from "../components/Loading.vue";

import { getLangFromUrl, languages } from "../lib/i18n.js";
const lang = getLangFromUrl(Astro.url);
const pages = await getPages(lang);
const slug = Astro.params.slug;


---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>D/PACK</title>
    <ViewTransitions />
  </head>

  <body class="bg-black">


    <!-- <Loading client:load  transition:persist class="w-[100vw] h-[100dvh] fixed overflow-hidden !p-0" /> -->
   

    <div class="wrapper">
      <Header
        transition:persist
        slug={slug}
        lang={lang}
        languages={languages}
        pages={pages}
        client:load
      />

      <!-- <div class="text-black" id="content" transition:animate={slide({ duration: '2s' })}> -->
      <div class="main bg-white">
        <slot />

        <!-- </div> -->
        <Footer class=" z-12 relative"/>
      </div>
    </div>

    <script>
      import { gsap } from "gsap";
      import ScrollTrigger from "gsap/ScrollTrigger";
      import barba from "@barba/core";
      import Lenis from "lenis";

      gsap.registerPlugin(ScrollTrigger);

      function initLenis(doc = document) {
        const lenis = new Lenis({
          duration: 1.2,
          easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
        });

        lenis.on("scroll", ScrollTrigger.update);

        ScrollTrigger.refresh();
        

        function raf(time: any) {
          lenis.raf(time);
          requestAnimationFrame(raf);
        }
        requestAnimationFrame(raf);
      }

      initLenis();

      // function outAnimation() {
      //   const loading = document.querySelector(".loading");
      //   const wrapper = document.querySelector(".main");
      //   const header = document.querySelector("header");
      //   const messageLoad = document.querySelector(".message-load")

      //   const tl = gsap.timeline();

      //   gsap.set(loading, {
      //     height: "0vh",
      //     bottom: "0px",
      //     top: "auto",
      //   });

      //   tl.to(header, {
      //     yPercent: -100,
      //     duration: 1,
      //     ease: "power4.inOut",
      //   }).to(loading, {
      //     height: "100dvh",
      //     duration: 1,
      //     ease: "power2.in",
      //   },'<').to(
      //     messageLoad,
      //       {
      //         height: "100dvh",
      //         ease: "power2.inOut",
      //       }).to(wrapper, {
      //     autoAlpha: 0,
      //     ease: "power2.inOut",
      //   })
      // }

      // function enterAnimation() {
      //   const loading = document.querySelector(".loading");
      //   const wrapper = document.querySelector(".main");
      //   const header = document.querySelector("header");
      //   const messageLoad = document.querySelector(".message-load")

        

        

      //   gsap.set(header, {
      //    yPercent: 0,
      //   });

      //   const tl = gsap.timeline();

      //   tl
        
      //     .to(
      //       wrapper,
      //       {
      //         pointerEvents: "all",
      //       })
      //       .to(loading, {
      //     height: "0vh",
      //     duration: 1,
      //     ease: "power2.inOut",
      //   })
      //       .to(
      //     messageLoad,
      //       {
      //         duration: 1,
      //         height: "0vh",
      //         ease: "power2.inOut",
      //       })
      //     .to(header, {
      //       yPercent: 100,
      //       ease: "power2.inOut",
      //     },'<');
      // }

      document.addEventListener("astro:before-preparation", () => {
        console.log("before prep");
        const header = document.querySelector("header");

         gsap.to(header, {
            yPercent: -100,
            ease: "power2.inOut",
          });
      });

      document.addEventListener("astro:before-swap", () => {
        console.log("after swap");
        window.scrollTo(0, 0);

        
        ScrollTrigger.getAll().forEach((trigger) => trigger.kill());
        ScrollTrigger.refresh();
        initLenis();
      });

      document.addEventListener("astro:after-swap", () => {
        console.log("after swap");
         const header = document.querySelector("header");

        window.scrollTo(0, 0);
        ScrollTrigger.refresh();
        gsap.to(header, {
            yPercent: 0,
            ease: "power2.inOut",
          });
      });

      document.addEventListener("astro:page-load", () => {
        console.log("page loaded");

        // enterAnimation();
      });
    </script>
  </body>
</html>

<style>
  body {
    @apply w-[100vw]
		w-full
		overflow-x-hidden;
  }

  .wrapper {
    @apply w-[100vw]
	overflow-x-hidden;
  }

</style>

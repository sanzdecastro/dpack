---
// import LenisScroll from '../components/LenisScroll.astro';
import "../styles/global.css";

import { ViewTransitions } from "astro:transitions";
import { fade } from "astro:transitions";
import { slide } from 'astro:transitions';
import { getPages, getPage } from '../lib/api.js';

import { ClientRouter } from 'astro:transitions';
import Header from "../components/Header.vue";
import Footer from "../components/Footer.vue";

import { getLangFromUrl, languages } from '../lib/i18n.js';
const lang = getLangFromUrl(Astro.url);
const pages = await getPages(lang);
const slug = Astro.params.slug;

---

<!DOCTYPE html>
<html lang={lang}  >
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
		<ViewTransitions />
	</head>

	<body>
		<!-- <LenisScroll/> -->
		<div id="barba-wrapper" data-barba="wrapper" transition:animate={fade({ duration: '1s' })}>
			<Header transition:persist slug={slug} lang={lang} languages={languages} pages={pages} client:load/>
			<div class="barba-container" data-barba="container" data-barba-namespace="slide-up">
				<!-- <div class="text-black" id="content" transition:animate={slide({ duration: '2s' })}> -->
				<div class="wrapper">
					<slot/>
					<Footer></Footer>
				</div>
				<!-- </div> -->	
				
			</div>
			
		</div>
		
		<script>
			import { gsap } from 'gsap';
			import ScrollTrigger from 'gsap/ScrollTrigger';
			import barba from '@barba/core';
			import Lenis from 'lenis';

			gsap.registerPlugin(ScrollTrigger);
			
			function initLenis(doc = document) {
			  const lenis = new Lenis({
			    duration: 1.2,
			    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
			  });

			  lenis.on('scroll', ScrollTrigger.update);

			  ScrollTrigger.refresh();
			  ScrollTrigger.defaults({
				scroller: doc,
			});



			  function raf(time: any) {
			    lenis.raf(time);
			    requestAnimationFrame(raf);
			  }
			  requestAnimationFrame(raf);
			}

			initLenis();

			document.addEventListener("astro:before-preparation", (event) => {
				console.log("before prep")
				
			});

			document.addEventListener("astro:before-swap", () => {
				console.log("after swap")
				window.scrollTo(0, 0);
				ScrollTrigger.getAll().forEach(trigger => trigger.kill());
						ScrollTrigger.refresh();
						initLenis();
			});

			document.addEventListener("astro:after-swap", () => {
				console.log("after swap")
			
			});

			document.addEventListener("astro:page-load", () => {
				console.log("page loaded")
			});

			// barba.init({
			// 	cacheIgnore: true,
			// 	timeout: 10000,
			// 	preventRunning: false,
			// 	transitions: [
			// 	{
			// 		name: 'slide-up',
			// 		leave() {
						
			// 			return gsap.to(".barba-container", {
			// 				scale: .8,
			// 				duration: 0.5,
			// 				autoAlpha: 0,
			// 				ease: 'power2.inOut'
			// 			});
			// 		},
			// 		beforeEnter() {
			// 			window.scrollTo(0, 0);
			// 			ScrollTrigger.getAll().forEach(trigger => trigger.kill());
			// 			ScrollTrigger.refresh();
			// 			initLenis();
			// 		},
			// 		enter() {
						
			// 			return gsap.from(".barba-container", {
			// 				// x: '100%',
			// 				scale: 1.1,
			// 				duration: 0.5,
			// 				autoAlpha: 0,
			// 				ease: 'power2.inOut'
			// 			});
					
			// 		}
			// 	}
			// 	]
			// });

			
			
		</script>
	</body>
	
</html>

<style>

	body {
		@apply
		w-[100vw]
		overflow-x-hidden;
	}
	
	 /* .barba-container {
		
		position: absolute;
		width: 100%;
		overflow-x: hidden;
		overflow-y: hidden;
		top: 0px;
		left: 0px;
		z-index: -1;
	} */
</style>
